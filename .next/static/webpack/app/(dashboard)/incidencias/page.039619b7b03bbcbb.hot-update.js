"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/incidencias/page",{

/***/ "(app-pages-browser)/./api/incidenciasCrud.ts":
/*!********************************!*\
  !*** ./api/incidenciasCrud.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteIncidencia: () => (/* binding */ deleteIncidencia),\n/* harmony export */   getAllIncidencia: () => (/* binding */ getAllIncidencia),\n/* harmony export */   saveIncidencia: () => (/* binding */ saveIncidencia)\n/* harmony export */ });\nconst saveIncidencia = (incidencia, creadores, alumnos, tipoIncidencias)=>{\n    let status = true;\n    try {\n        const CREADOR = creadores.find((item)=>item.user.profile.fullName == incidencia.creador);\n        const ALUMNO = alumnos.find((item)=>item.user.profile.fullName == incidencia.alumno);\n        const TIPO_INCIDENCIA = tipoIncidencias.find((item)=>item.descripcion == incidencia.tipoIncidencia);\n        const INCIDENCIA = {\n            alumnoProfile: ALUMNO,\n            created_at: incidencia.created_at.toString(),\n            descripcion: incidencia.descripcion,\n            id: 0,\n            tipoIncidencia: TIPO_INCIDENCIA,\n            user: CREADOR.user\n        };\n        console.dir(INCIDENCIA);\n        return status;\n    } catch (error) {}\n};\nconst deleteIncidencia = ()=>{};\nconst getAllIncidencia = async ()=>{\n    try {\n        const result = await fetch('http://localhost:3000/api/incidencia');\n        if (result.ok != true) {\n            throw new Error();\n        }\n        return result.json();\n    } catch (error) {\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwaS9pbmNpZGVuY2lhc0NydWQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRU8sTUFBTUEsaUJBQWlCLENBQUNDLFlBQTZCQyxXQUF1QkMsU0FBbUJDO0lBQ2xHLElBQUlDLFNBQVM7SUFDYixJQUFJO1FBQ0EsTUFBTUMsVUFBZ0NKLFVBQVVLLElBQUksQ0FBQyxDQUFDQyxPQUFTQSxLQUFLQyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsUUFBUSxJQUFJVixXQUFXVyxPQUFPO1FBQ25ILE1BQU1DLFNBQTZCVixRQUFRSSxJQUFJLENBQUMsQ0FBQ0MsT0FBU0EsS0FBS0MsSUFBSSxDQUFDQyxPQUFPLENBQUNDLFFBQVEsSUFBSVYsV0FBV2EsTUFBTTtRQUN6RyxNQUFNQyxrQkFBOENYLGdCQUFnQkcsSUFBSSxDQUFDLENBQUNDLE9BQVNBLEtBQUtRLFdBQVcsSUFBSWYsV0FBV2dCLGNBQWM7UUFFaEksTUFBTUMsYUFBd0I7WUFDMUJDLGVBQWVOO1lBQ2ZPLFlBQVluQixXQUFXbUIsVUFBVSxDQUFDQyxRQUFRO1lBQzFDTCxhQUFhZixXQUFXZSxXQUFXO1lBQ25DTSxJQUFJO1lBQ0pMLGdCQUFnQkY7WUFDaEJOLE1BQU1ILFFBQVNHLElBQUk7UUFDdkI7UUFFQWMsUUFBUUMsR0FBRyxDQUFDTjtRQUNaLE9BQU9iO0lBQ1AsRUFBRSxPQUFPb0IsT0FBTyxDQUVoQjtBQUNKLEVBQUM7QUFFTSxNQUFNQyxtQkFBbUIsS0FFaEMsRUFBQztBQUVNLE1BQU1DLG1CQUFtQjtJQUU1QixJQUFJO1FBQ0EsTUFBTUMsU0FBUyxNQUFNQyxNQUFNO1FBRTNCLElBQUdELE9BQU9FLEVBQUUsSUFBSSxNQUFLO1lBQ2pCLE1BQU0sSUFBSUM7UUFDZDtRQUVBLE9BQU9ILE9BQU9JLElBQUk7SUFFdEIsRUFBRSxPQUFPUCxPQUFPO1FBQ1osTUFBTUE7SUFDVjtBQUVKLEVBQUMiLCJzb3VyY2VzIjpbIi9ob21lL3ZhbGVuL0Rlc2t0b3AvZnJvbnQvYXBpL2luY2lkZW5jaWFzQ3J1ZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBbHVtbm8sIEluY2lkZW5jaWEsIEluY2lkZW5jaWFUYWJsZSwgUHJvZmVzb3IsIFRpcG9JbmNpZGVuY2lhLCBVc2VyIH0gZnJvbSBcIkAvaW50ZXJmYWNlcy9pbnRlcmZhY2VzXCJcblxuZXhwb3J0IGNvbnN0IHNhdmVJbmNpZGVuY2lhID0gKGluY2lkZW5jaWE6IEluY2lkZW5jaWFUYWJsZSwgY3JlYWRvcmVzOiBQcm9mZXNvcltdLCBhbHVtbm9zOiBBbHVtbm9bXSwgdGlwb0luY2lkZW5jaWFzOiBUaXBvSW5jaWRlbmNpYVtdKTp2b2lkID0+IHtcbiAgICBsZXQgc3RhdHVzID0gdHJ1ZVxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IENSRUFET1I6IFByb2Zlc29yIHwgdW5kZWZpbmVkID0gY3JlYWRvcmVzLmZpbmQoKGl0ZW0pID0+IGl0ZW0udXNlci5wcm9maWxlLmZ1bGxOYW1lID09IGluY2lkZW5jaWEuY3JlYWRvcilcbiAgICBjb25zdCBBTFVNTk86IEFsdW1ubyB8IHVuZGVmaW5lZCA9IGFsdW1ub3MuZmluZCgoaXRlbSkgPT4gaXRlbS51c2VyLnByb2ZpbGUuZnVsbE5hbWUgPT0gaW5jaWRlbmNpYS5hbHVtbm8pXG4gICAgY29uc3QgVElQT19JTkNJREVOQ0lBOiBUaXBvSW5jaWRlbmNpYSB8IHVuZGVmaW5lZCA9IHRpcG9JbmNpZGVuY2lhcy5maW5kKChpdGVtKSA9PiBpdGVtLmRlc2NyaXBjaW9uID09IGluY2lkZW5jaWEudGlwb0luY2lkZW5jaWEpXG5cbiAgICBjb25zdCBJTkNJREVOQ0lBOkluY2lkZW5jaWEgPSB7XG4gICAgICAgIGFsdW1ub1Byb2ZpbGU6IEFMVU1OTyEsXG4gICAgICAgIGNyZWF0ZWRfYXQ6IGluY2lkZW5jaWEuY3JlYXRlZF9hdC50b1N0cmluZygpLFxuICAgICAgICBkZXNjcmlwY2lvbjogaW5jaWRlbmNpYS5kZXNjcmlwY2lvbixcbiAgICAgICAgaWQ6IDAsXG4gICAgICAgIHRpcG9JbmNpZGVuY2lhOiBUSVBPX0lOQ0lERU5DSUEhLFxuICAgICAgICB1c2VyOiBDUkVBRE9SIS51c2VyXG4gICAgfVxuXG4gICAgY29uc29sZS5kaXIoSU5DSURFTkNJQSlcbiAgICByZXR1cm4gc3RhdHVzXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgXG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlSW5jaWRlbmNpYSA9ICgpOnZvaWQgPT4ge1xuXG59XG5cbmV4cG9ydCBjb25zdCBnZXRBbGxJbmNpZGVuY2lhID0gYXN5bmMoKTogUHJvbWlzZTxJbmNpZGVuY2lhW10gfCB1bmRlZmluZWQ+ID0+IHtcblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL2luY2lkZW5jaWEnKVxuXG4gICAgICAgIGlmKHJlc3VsdC5vayAhPSB0cnVlKXtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzdWx0Lmpzb24oKVxuICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHRocm93IGVycm9yICAgICAgICBcbiAgICB9XG5cbn1cbiJdLCJuYW1lcyI6WyJzYXZlSW5jaWRlbmNpYSIsImluY2lkZW5jaWEiLCJjcmVhZG9yZXMiLCJhbHVtbm9zIiwidGlwb0luY2lkZW5jaWFzIiwic3RhdHVzIiwiQ1JFQURPUiIsImZpbmQiLCJpdGVtIiwidXNlciIsInByb2ZpbGUiLCJmdWxsTmFtZSIsImNyZWFkb3IiLCJBTFVNTk8iLCJhbHVtbm8iLCJUSVBPX0lOQ0lERU5DSUEiLCJkZXNjcmlwY2lvbiIsInRpcG9JbmNpZGVuY2lhIiwiSU5DSURFTkNJQSIsImFsdW1ub1Byb2ZpbGUiLCJjcmVhdGVkX2F0IiwidG9TdHJpbmciLCJpZCIsImNvbnNvbGUiLCJkaXIiLCJlcnJvciIsImRlbGV0ZUluY2lkZW5jaWEiLCJnZXRBbGxJbmNpZGVuY2lhIiwicmVzdWx0IiwiZmV0Y2giLCJvayIsIkVycm9yIiwianNvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./api/incidenciasCrud.ts\n"));

/***/ })

});