"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/incidencias/page",{

/***/ "(app-pages-browser)/./api/incidenciasCrud.ts":
/*!********************************!*\
  !*** ./api/incidenciasCrud.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteIncidencia: () => (/* binding */ deleteIncidencia),\n/* harmony export */   getAllIncidencia: () => (/* binding */ getAllIncidencia),\n/* harmony export */   saveIncidencia: () => (/* binding */ saveIncidencia)\n/* harmony export */ });\n// import { useWebSocket } from \"@/context/WebSocketContext\"\nconst saveIncidencia = async (incidencia, creadores, alumnos, tipoIncidencias)=>{\n    // const {newIncidencia} = useWebSocket()\n    try {\n        const CREADOR = creadores.find((item)=>item.user.profile.fullName == incidencia.creador);\n        const ALUMNO = alumnos.find((item)=>item.user.profile.fullName == incidencia.alumno);\n        const TIPO_INCIDENCIA = tipoIncidencias.find((item)=>item.descripcion == incidencia.tipoIncidencia);\n        const INCIDENCIA = {\n            user_id: CREADOR.user.id,\n            id: incidencia.id,\n            alumno_id: ALUMNO.idea,\n            descripcion: incidencia.descripcion,\n            tipoIncidencia: TIPO_INCIDENCIA.id.toString()\n        };\n        console.log(INCIDENCIA);\n        newIncidencia(INCIDENCIA);\n        const result = await fetch(\"\".concat(\"http://localhost:3000\", \"/api/incidencia\"), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(INCIDENCIA)\n        });\n        if (!result.ok) {\n            const response = await result.json();\n            alert(\"\".concat(response.message));\n        }\n    } catch (error) {}\n};\nconst deleteIncidencia = async (id)=>{\n    try {\n        const result = await fetch(\"\".concat(\"http://localhost:3000\", \"/api/incidencia/\").concat(id), {\n            method: 'DELETE'\n        });\n        if (!result.ok) {\n            const response = await result.json();\n            alert(\"\".concat(response.message));\n        }\n    } catch (error) {}\n};\nconst getAllIncidencia = async ()=>{\n    try {\n        const result = await fetch(\"\".concat(\"http://localhost:3000\", \"/api/incidencia\"));\n        if (result.ok != true) {\n            throw new Error();\n        }\n        return result.json();\n    } catch (error) {\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwaS9pbmNpZGVuY2lhc0NydWQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsNERBQTREO0FBRXJELE1BQU1BLGlCQUFpQixPQUFNQyxZQUE2QkMsV0FBdUJDLFNBQW1CQztJQUN2Ryx5Q0FBeUM7SUFDekMsSUFBSTtRQUNBLE1BQU1DLFVBQWdDSCxVQUFVSSxJQUFJLENBQUMsQ0FBQ0MsT0FBU0EsS0FBS0MsSUFBSSxDQUFDQyxPQUFPLENBQUNDLFFBQVEsSUFBSVQsV0FBV1UsT0FBTztRQUMvRyxNQUFNQyxTQUE2QlQsUUFBUUcsSUFBSSxDQUFDLENBQUNDLE9BQVNBLEtBQUtDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxRQUFRLElBQUlULFdBQVdZLE1BQU07UUFDekcsTUFBTUMsa0JBQThDVixnQkFBZ0JFLElBQUksQ0FBQyxDQUFDQyxPQUFTQSxLQUFLUSxXQUFXLElBQUlkLFdBQVdlLGNBQWM7UUFFaEksTUFBTUMsYUFBOEI7WUFDaENDLFNBQVNiLFFBQVNHLElBQUksQ0FBQ1csRUFBRTtZQUN6QkEsSUFBSWxCLFdBQVdrQixFQUFFO1lBQ2pCQyxXQUFXUixPQUFRUyxJQUFJO1lBQ3ZCTixhQUFhZCxXQUFXYyxXQUFXO1lBQ25DQyxnQkFBZ0JGLGdCQUFpQkssRUFBRSxDQUFDRyxRQUFRO1FBQ2hEO1FBQ0FDLFFBQVFDLEdBQUcsQ0FBQ1A7UUFDWlEsY0FBY1I7UUFDZCxNQUFNUyxTQUFTLE1BQU1DLE1BQU0sR0FBdUMsT0FBcENDLHVCQUFtQyxFQUFDLG9CQUFrQjtZQUNoRkcsUUFBUTtZQUNSQyxTQUFTO2dCQUFDLGdCQUFnQjtZQUFrQjtZQUM1Q0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDbEI7UUFDekI7UUFFQSxJQUFHLENBQUNTLE9BQU9VLEVBQUUsRUFBQztZQUNWLE1BQU1DLFdBQVcsTUFBTVgsT0FBT1ksSUFBSTtZQUN0Q0MsTUFBTSxHQUFvQixPQUFqQkYsU0FBU0csT0FBTztRQUN6QjtJQUdKLEVBQUUsT0FBT0MsT0FBTyxDQUVoQjtBQUNKLEVBQUM7QUFFTSxNQUFNQyxtQkFBbUIsT0FBTXZCO0lBQ2xDLElBQUk7UUFJQSxNQUFNTyxTQUFTLE1BQU1DLE1BQU0sR0FBeURSLE9BQXREUyx1QkFBbUMsRUFBQyxvQkFBcUIsT0FBSFQsS0FBTTtZQUN0RlksUUFBUTtRQUNaO1FBRUEsSUFBRyxDQUFDTCxPQUFPVSxFQUFFLEVBQUM7WUFDVixNQUFNQyxXQUFXLE1BQU1YLE9BQU9ZLElBQUk7WUFDdENDLE1BQU0sR0FBb0IsT0FBakJGLFNBQVNHLE9BQU87UUFDekI7SUFHSixFQUFFLE9BQU9DLE9BQU8sQ0FFaEI7QUFFSixFQUFDO0FBRU0sTUFBTUUsbUJBQW1CO0lBRTVCLElBQUk7UUFDQSxNQUFNakIsU0FBUyxNQUFNQyxNQUFNLEdBQXVDLE9BQXBDQyx1QkFBbUMsRUFBQztRQUVsRSxJQUFHRixPQUFPVSxFQUFFLElBQUksTUFBSztZQUNqQixNQUFNLElBQUlRO1FBQ2Q7UUFFQSxPQUFPbEIsT0FBT1ksSUFBSTtJQUV0QixFQUFFLE9BQU9HLE9BQU87UUFDWixNQUFNQTtJQUNWO0FBRUosRUFBQyIsInNvdXJjZXMiOlsiL2hvbWUvdmFsZW4vRG9jdW1lbnRvcy9jYXJuZXQtcHVudG9zL2FwaS9pbmNpZGVuY2lhc0NydWQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsgdXNlV2ViU29ja2V0IH0gZnJvbSBcIkAvY29udGV4dC9XZWJTb2NrZXRDb250ZXh0XCJcbmltcG9ydCB7IEFsdW1ubywgSW5jaWRlbmNpYSwgSW5jaWRlbmNpYUVtbWl0LCBJbmNpZGVuY2lhVGFibGUsIFByb2Zlc29yLCBUaXBvSW5jaWRlbmNpYSwgVXNlciB9IGZyb20gXCJAL2ludGVyZmFjZXMvaW50ZXJmYWNlc1wiXG5leHBvcnQgY29uc3Qgc2F2ZUluY2lkZW5jaWEgPSBhc3luYyhpbmNpZGVuY2lhOiBJbmNpZGVuY2lhVGFibGUsIGNyZWFkb3JlczogUHJvZmVzb3JbXSwgYWx1bW5vczogQWx1bW5vW10sIHRpcG9JbmNpZGVuY2lhczogVGlwb0luY2lkZW5jaWFbXSk6UHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgLy8gY29uc3Qge25ld0luY2lkZW5jaWF9ID0gdXNlV2ViU29ja2V0KClcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBDUkVBRE9SOiBQcm9mZXNvciB8IHVuZGVmaW5lZCA9IGNyZWFkb3Jlcy5maW5kKChpdGVtKSA9PiBpdGVtLnVzZXIucHJvZmlsZS5mdWxsTmFtZSA9PSBpbmNpZGVuY2lhLmNyZWFkb3IpXG4gICAgICAgIGNvbnN0IEFMVU1OTzogQWx1bW5vIHwgdW5kZWZpbmVkID0gYWx1bW5vcy5maW5kKChpdGVtKSA9PiBpdGVtLnVzZXIucHJvZmlsZS5mdWxsTmFtZSA9PSBpbmNpZGVuY2lhLmFsdW1ubylcbiAgICAgICAgY29uc3QgVElQT19JTkNJREVOQ0lBOiBUaXBvSW5jaWRlbmNpYSB8IHVuZGVmaW5lZCA9IHRpcG9JbmNpZGVuY2lhcy5maW5kKChpdGVtKSA9PiBpdGVtLmRlc2NyaXBjaW9uID09IGluY2lkZW5jaWEudGlwb0luY2lkZW5jaWEpXG5cbiAgICAgICAgY29uc3QgSU5DSURFTkNJQTogSW5jaWRlbmNpYUVtbWl0ID0ge1xuICAgICAgICAgICAgdXNlcl9pZDogQ1JFQURPUiEudXNlci5pZCxcbiAgICAgICAgICAgIGlkOiBpbmNpZGVuY2lhLmlkLFxuICAgICAgICAgICAgYWx1bW5vX2lkOiBBTFVNTk8hLmlkZWEsXG4gICAgICAgICAgICBkZXNjcmlwY2lvbjogaW5jaWRlbmNpYS5kZXNjcmlwY2lvbixcbiAgICAgICAgICAgIHRpcG9JbmNpZGVuY2lhOiBUSVBPX0lOQ0lERU5DSUEhLmlkLnRvU3RyaW5nKCksXG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coSU5DSURFTkNJQSlcbiAgICAgICAgbmV3SW5jaWRlbmNpYShJTkNJREVOQ0lBKVxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmZXRjaChgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CQUNLRU5EX1VSTH0vYXBpL2luY2lkZW5jaWFgLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KElOQ0lERU5DSUEpXG4gICAgICAgIH0pXG5cbiAgICAgICAgaWYoIXJlc3VsdC5vayl7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHJlc3VsdC5qc29uKClcbiAgICAgICAgYWxlcnQoYCR7cmVzcG9uc2UubWVzc2FnZX1gKVxuICAgICAgICB9XG5cbiAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBcbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVJbmNpZGVuY2lhID0gYXN5bmMoaWQ6IHN0cmluZyk6UHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgXG5cblxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmZXRjaChgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CQUNLRU5EX1VSTH0vYXBpL2luY2lkZW5jaWEvJHtpZH1gLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgICB9KVxuXG4gICAgICAgIGlmKCFyZXN1bHQub2spe1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXN1bHQuanNvbigpXG4gICAgICAgIGFsZXJ0KGAke3Jlc3BvbnNlLm1lc3NhZ2V9YClcbiAgICAgICAgfVxuXG4gICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgXG4gICAgfVxuXG59XG5cbmV4cG9ydCBjb25zdCBnZXRBbGxJbmNpZGVuY2lhID0gYXN5bmMoKTogUHJvbWlzZTxJbmNpZGVuY2lhW10gfCB1bmRlZmluZWQ+ID0+IHtcblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGZldGNoKGAke3Byb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0JBQ0tFTkRfVVJMfS9hcGkvaW5jaWRlbmNpYWApXG5cbiAgICAgICAgaWYocmVzdWx0Lm9rICE9IHRydWUpe1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHQuanNvbigpXG4gICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgZXJyb3IgICAgICAgIFxuICAgIH1cblxufVxuIl0sIm5hbWVzIjpbInNhdmVJbmNpZGVuY2lhIiwiaW5jaWRlbmNpYSIsImNyZWFkb3JlcyIsImFsdW1ub3MiLCJ0aXBvSW5jaWRlbmNpYXMiLCJDUkVBRE9SIiwiZmluZCIsIml0ZW0iLCJ1c2VyIiwicHJvZmlsZSIsImZ1bGxOYW1lIiwiY3JlYWRvciIsIkFMVU1OTyIsImFsdW1ubyIsIlRJUE9fSU5DSURFTkNJQSIsImRlc2NyaXBjaW9uIiwidGlwb0luY2lkZW5jaWEiLCJJTkNJREVOQ0lBIiwidXNlcl9pZCIsImlkIiwiYWx1bW5vX2lkIiwiaWRlYSIsInRvU3RyaW5nIiwiY29uc29sZSIsImxvZyIsIm5ld0luY2lkZW5jaWEiLCJyZXN1bHQiLCJmZXRjaCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19CQUNLRU5EX1VSTCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwicmVzcG9uc2UiLCJqc29uIiwiYWxlcnQiLCJtZXNzYWdlIiwiZXJyb3IiLCJkZWxldGVJbmNpZGVuY2lhIiwiZ2V0QWxsSW5jaWRlbmNpYSIsIkVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./api/incidenciasCrud.ts\n"));

/***/ })

});