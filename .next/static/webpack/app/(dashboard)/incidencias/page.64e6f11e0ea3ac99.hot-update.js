"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/incidencias/page",{

/***/ "(app-pages-browser)/./api/incidenciasCrud.ts":
/*!********************************!*\
  !*** ./api/incidenciasCrud.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteIncidencia: () => (/* binding */ deleteIncidencia),\n/* harmony export */   getAllIncidencia: () => (/* binding */ getAllIncidencia),\n/* harmony export */   saveIncidencia: () => (/* binding */ saveIncidencia)\n/* harmony export */ });\nconst saveIncidencia = async (incidencia, creadores, alumnos, tipoIncidencias)=>{\n    try {\n        const CREADOR = creadores.find((item)=>item.user.profile.fullName == incidencia.creador);\n        const ALUMNO = alumnos.find((item)=>item.user.profile.fullName == incidencia.alumno);\n        const TIPO_INCIDENCIA = tipoIncidencias.find((item)=>item.descripcion == incidencia.tipoIncidencia);\n        const INCIDENCIA = {\n            user_id: CREADOR.user.id,\n            id: 100,\n            alumno_id: ALUMNO.idea,\n            descripcion: incidencia.descripcion,\n            tipoIncidencia: TIPO_INCIDENCIA.id\n        };\n        const result = await fetch('http://localhost:3000/api/incidencia', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify()\n        });\n        return;\n    } catch (error) {}\n};\nconst deleteIncidencia = ()=>{};\nconst getAllIncidencia = async ()=>{\n    try {\n        const result = await fetch('http://localhost:3000/api/incidencia');\n        if (result.ok != true) {\n            throw new Error();\n        }\n        return result.json();\n    } catch (error) {\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwaS9pbmNpZGVuY2lhc0NydWQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRU8sTUFBTUEsaUJBQWlCLE9BQU1DLFlBQTZCQyxXQUF1QkMsU0FBbUJDO0lBQ3ZHLElBQUk7UUFDQSxNQUFNQyxVQUFnQ0gsVUFBVUksSUFBSSxDQUFDLENBQUNDLE9BQVNBLEtBQUtDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxRQUFRLElBQUlULFdBQVdVLE9BQU87UUFDbkgsTUFBTUMsU0FBNkJULFFBQVFHLElBQUksQ0FBQyxDQUFDQyxPQUFTQSxLQUFLQyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsUUFBUSxJQUFJVCxXQUFXWSxNQUFNO1FBQ3pHLE1BQU1DLGtCQUE4Q1YsZ0JBQWdCRSxJQUFJLENBQUMsQ0FBQ0MsT0FBU0EsS0FBS1EsV0FBVyxJQUFJZCxXQUFXZSxjQUFjO1FBRWhJLE1BQU1DLGFBQWE7WUFDZkMsU0FBU2IsUUFBU0csSUFBSSxDQUFDVyxFQUFFO1lBQ3pCQSxJQUFJO1lBQ0pDLFdBQVdSLE9BQVFTLElBQUk7WUFDdkJOLGFBQWFkLFdBQVdjLFdBQVc7WUFDbkNDLGdCQUFnQkYsZ0JBQWlCSyxFQUFFO1FBQ3ZDO1FBRUEsTUFBTUcsU0FBUyxNQUFNQyxNQUFNLHdDQUF3QztZQUMvREMsUUFBUTtZQUNSQyxTQUFTO2dCQUFDLGdCQUFnQjtZQUFrQjtZQUM1Q0MsTUFBTUMsS0FBS0MsU0FBUztRQUN4QjtRQUVBO0lBQ0EsRUFBRSxPQUFPQyxPQUFPLENBRWhCO0FBQ0osRUFBQztBQUVNLE1BQU1DLG1CQUFtQixLQUVoQyxFQUFDO0FBRU0sTUFBTUMsbUJBQW1CO0lBRTVCLElBQUk7UUFDQSxNQUFNVCxTQUFTLE1BQU1DLE1BQU07UUFFM0IsSUFBR0QsT0FBT1UsRUFBRSxJQUFJLE1BQUs7WUFDakIsTUFBTSxJQUFJQztRQUNkO1FBRUEsT0FBT1gsT0FBT1ksSUFBSTtJQUV0QixFQUFFLE9BQU9MLE9BQU87UUFDWixNQUFNQTtJQUNWO0FBRUosRUFBQyIsInNvdXJjZXMiOlsiL2hvbWUvdmFsZW4vRGVza3RvcC9mcm9udC9hcGkvaW5jaWRlbmNpYXNDcnVkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFsdW1ubywgSW5jaWRlbmNpYSwgSW5jaWRlbmNpYVRhYmxlLCBQcm9mZXNvciwgVGlwb0luY2lkZW5jaWEsIFVzZXIgfSBmcm9tIFwiQC9pbnRlcmZhY2VzL2ludGVyZmFjZXNcIlxuXG5leHBvcnQgY29uc3Qgc2F2ZUluY2lkZW5jaWEgPSBhc3luYyhpbmNpZGVuY2lhOiBJbmNpZGVuY2lhVGFibGUsIGNyZWFkb3JlczogUHJvZmVzb3JbXSwgYWx1bW5vczogQWx1bW5vW10sIHRpcG9JbmNpZGVuY2lhczogVGlwb0luY2lkZW5jaWFbXSk6UHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgQ1JFQURPUjogUHJvZmVzb3IgfCB1bmRlZmluZWQgPSBjcmVhZG9yZXMuZmluZCgoaXRlbSkgPT4gaXRlbS51c2VyLnByb2ZpbGUuZnVsbE5hbWUgPT0gaW5jaWRlbmNpYS5jcmVhZG9yKVxuICAgIGNvbnN0IEFMVU1OTzogQWx1bW5vIHwgdW5kZWZpbmVkID0gYWx1bW5vcy5maW5kKChpdGVtKSA9PiBpdGVtLnVzZXIucHJvZmlsZS5mdWxsTmFtZSA9PSBpbmNpZGVuY2lhLmFsdW1ubylcbiAgICBjb25zdCBUSVBPX0lOQ0lERU5DSUE6IFRpcG9JbmNpZGVuY2lhIHwgdW5kZWZpbmVkID0gdGlwb0luY2lkZW5jaWFzLmZpbmQoKGl0ZW0pID0+IGl0ZW0uZGVzY3JpcGNpb24gPT0gaW5jaWRlbmNpYS50aXBvSW5jaWRlbmNpYSlcblxuICAgIGNvbnN0IElOQ0lERU5DSUEgPSB7XG4gICAgICAgIHVzZXJfaWQ6IENSRUFET1IhLnVzZXIuaWQsXG4gICAgICAgIGlkOiAxMDAsXG4gICAgICAgIGFsdW1ub19pZDogQUxVTU5PIS5pZGVhLFxuICAgICAgICBkZXNjcmlwY2lvbjogaW5jaWRlbmNpYS5kZXNjcmlwY2lvbixcbiAgICAgICAgdGlwb0luY2lkZW5jaWE6IFRJUE9fSU5DSURFTkNJQSEuaWQsXG4gICAgfVxuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvaW5jaWRlbmNpYScsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoKVxuICAgIH0pXG5cbiAgICByZXR1cm5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBcbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVJbmNpZGVuY2lhID0gKCk6dm9pZCA9PiB7XG5cbn1cblxuZXhwb3J0IGNvbnN0IGdldEFsbEluY2lkZW5jaWEgPSBhc3luYygpOiBQcm9taXNlPEluY2lkZW5jaWFbXSB8IHVuZGVmaW5lZD4gPT4ge1xuXG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvaW5jaWRlbmNpYScpXG5cbiAgICAgICAgaWYocmVzdWx0Lm9rICE9IHRydWUpe1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHQuanNvbigpXG4gICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgZXJyb3IgICAgICAgIFxuICAgIH1cblxufVxuIl0sIm5hbWVzIjpbInNhdmVJbmNpZGVuY2lhIiwiaW5jaWRlbmNpYSIsImNyZWFkb3JlcyIsImFsdW1ub3MiLCJ0aXBvSW5jaWRlbmNpYXMiLCJDUkVBRE9SIiwiZmluZCIsIml0ZW0iLCJ1c2VyIiwicHJvZmlsZSIsImZ1bGxOYW1lIiwiY3JlYWRvciIsIkFMVU1OTyIsImFsdW1ubyIsIlRJUE9fSU5DSURFTkNJQSIsImRlc2NyaXBjaW9uIiwidGlwb0luY2lkZW5jaWEiLCJJTkNJREVOQ0lBIiwidXNlcl9pZCIsImlkIiwiYWx1bW5vX2lkIiwiaWRlYSIsInJlc3VsdCIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyb3IiLCJkZWxldGVJbmNpZGVuY2lhIiwiZ2V0QWxsSW5jaWRlbmNpYSIsIm9rIiwiRXJyb3IiLCJqc29uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./api/incidenciasCrud.ts\n"));

/***/ })

});